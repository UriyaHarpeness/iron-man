#pragma once

#include "../consts.h"
#include "../tiny-aes/aes.h"

#include <dlfcn.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <netinet/in.h>

#ifdef RELEASE_BUILD

// Functions definitions.
int (*accept_f)(int sockfd, struct sockaddr *addr, socklen_t *addrlen);

int (*bind_f)(int sockfd, const struct sockaddr *addr, socklen_t addrlen);

void (*bzero_f)(void *s, size_t n);

int (*socket_f)(int domain, int type, int protocol);

/**
 * Functions to load:
 *
 * accept
 * bind
 * bzero
 * socket
 */

static const uint8_t FUNCTION_NAMES_KEY[KEY_LENGTH] = {/*function_names_key: 32 random uint8*/};
static const uint8_t FUNCTION_NAMES_IV[IV_LENGTH] = {/*function_names_iv: 16 random uint8*/};

#define NUMBER_OF_FUNCTIONS 0 // Functions number.

#define FUNCTION_NAMES_LENGTH 0 // Function names length.

static void **functions[NUMBER_OF_FUNCTIONS] = {}; // Functions.

static unsigned char function_name_lengths[NUMBER_OF_FUNCTIONS] = {}; // Function name lengths.

static char function_names[FUNCTION_NAMES_LENGTH] = ""; // Function names.

void load_all_functions();

#else // RELEASE_BUILD
#define accept_f accept
#define bind_f bind
#define bzero_f bzero
#define load_all_functions() {}
#endif // RELEASE_BUILD
